//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentACar
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelContainer : DbContext
    {
        public ModelContainer()
            : base("name=ModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Grad> Gradovi { get; set; }
        public virtual DbSet<Filijala> Filijale { get; set; }
        public virtual DbSet<Vozilo> Vozila { get; set; }
        public virtual DbSet<Ocena> Ocene { get; set; }
        public virtual DbSet<Servis> Servisi { get; set; }
        public virtual DbSet<Klijent> Klijenti { get; set; }
        public virtual DbSet<Rezervacija> Rezervacije { get; set; }
        public virtual DbSet<Osiguranje> Osiguranja { get; set; }
        public virtual DbSet<Zaposleni> Zaposleni { get; set; }
        public virtual DbSet<Cenovnik> Cenovniks { get; set; }
    
        public virtual int Procedure1(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure1", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    
        public virtual int Procedure2(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure2", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    
        [DbFunction("ModelContainer", "Funkcija")]
        public virtual IQueryable<Nullable<int>> Funkcija(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ModelContainer].[Funkcija](@Id)", idParameter);
        }
    
        [DbFunction("ModelContainer", "Funkcija1")]
        public virtual IQueryable<Nullable<int>> Funkcija1(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ModelContainer].[Funkcija1](@Id)", idParameter);
        }
    
        public virtual int Procedure11(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure11", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    
        public virtual int Procedure21(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure21", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    
        [DbFunction("ModelContainer", "Funkcija2")]
        public virtual IQueryable<Nullable<int>> Funkcija2(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ModelContainer].[Funkcija2](@Id)", idParameter);
        }
    
        public virtual int Procedure22(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure22", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    
        [DbFunction("ModelContainer", "Funkcija3")]
        public virtual IQueryable<Nullable<int>> Funkcija3(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[ModelContainer].[Funkcija3](@Id)", idParameter);
        }
    
        public virtual int Procedure23(Nullable<int> postanskiBroj1, string drzava1, string naziv1)
        {
            var postanskiBroj1Parameter = postanskiBroj1.HasValue ?
                new ObjectParameter("PostanskiBroj1", postanskiBroj1) :
                new ObjectParameter("PostanskiBroj1", typeof(int));
    
            var drzava1Parameter = drzava1 != null ?
                new ObjectParameter("Drzava1", drzava1) :
                new ObjectParameter("Drzava1", typeof(string));
    
            var naziv1Parameter = naziv1 != null ?
                new ObjectParameter("Naziv1", naziv1) :
                new ObjectParameter("Naziv1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure23", postanskiBroj1Parameter, drzava1Parameter, naziv1Parameter);
        }
    }
}
